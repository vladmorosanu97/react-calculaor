{"version":3,"sources":["models/buttonType.js","components/Button.jsx","components/Calculator.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["ButtonType","Object","freeze","default","operator","equal","Button","props","value","type","stylesButton","classNames","button","button-operator","button-equal","react_default","a","createElement","className","onClick","onClickItem","Calculator","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnClick","state","result","toString","length","setState","queue","undefined","prevState","substring","performCalculations","first","second","parseFloat","toFixed","firstNumber","secondNumber","index","isNaN","performOperation","_this$state","components_Button","Component","App","components_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed449ea3.chunk.js","sourcesContent":["export var ButtonType = Object.freeze({\"default\":1, \"operator\":2, \"equal\":3})","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"../styles/Button.scss\";\r\nimport \"../styles/Colors.scss\";\r\nimport { ButtonType } from \"../models/buttonType\";\r\n\r\nconst Button = props => {\r\n  const { value, type } = props;\r\n  \r\n  var stylesButton = classNames({\r\n    button: true,\r\n    \"button-operator\": type === ButtonType.operator,\r\n    \"button-equal\": type === ButtonType.equal\r\n  });\r\n\r\n  \r\n  return (\r\n    <div className={stylesButton} onClick={() => props.onClickItem(value)}>\r\n      {value}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../styles/Calculator.scss\";\r\nimport Button from \"./Button\";\r\nimport { ButtonType } from \"../models/buttonType\";\r\n\r\nclass Calculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      queue: \"\",\r\n      result: \"\"\r\n    };\r\n  }\r\n\r\n  handleOnClick = value => {\r\n    if (this.state.result.toString().length > 0) {\r\n      this.setState({\r\n        queue: \"\",\r\n        result: \"\"\r\n      });\r\n    }\r\n\r\n    if (value.props !== undefined) {\r\n      this.setState(prevState => {\r\n        return {\r\n          queue: prevState.queue.substring(0, prevState.queue.length - 1)\r\n        };\r\n      });\r\n    } else if (value === \"=\") {\r\n      let result = this.performCalculations();\r\n      this.setState({ result: result });\r\n    } else if (value === \"C\") {\r\n      this.setState({ queue: \"\", result: \"\" });\r\n    } else {\r\n      this.setState(prevState => {\r\n        return {\r\n          queue: prevState.queue + value\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  performOperation(first, second, operator) {\r\n    let result;\r\n    switch (operator) {\r\n      case \"+\":\r\n        result = parseFloat(first, 10) + parseFloat(second, 10);\r\n        break;\r\n      case \"x\":\r\n        result = parseFloat(first, 10) * parseFloat(second, 10);\r\n        break;\r\n\r\n      case \"-\":\r\n        result = parseFloat(first, 10) - parseFloat(second, 10);\r\n        break;\r\n\r\n      case \"/\":\r\n        result = parseFloat(first, 10) / parseFloat(second, 10);\r\n        break;\r\n\r\n      case \"%\":\r\n        result = parseFloat(first, 10) % parseFloat(second, 10);\r\n        break;\r\n\r\n      default:\r\n        result = 0;\r\n        break;\r\n    }\r\n    if (result % 1 !== 0) {\r\n      result = result.toFixed(2);\r\n    }\r\n    return result.toString();\r\n  }\r\n\r\n  performCalculations() {\r\n    let queue = this.state.queue;\r\n    let firstNumber = \"\";\r\n    let secondNumber = \"\";\r\n    let operator = \"\";\r\n\r\n    for (let index = 0; index < queue.length; index++) {\r\n      if (firstNumber.length > 0 && operator.length > 0) {\r\n        if (!isNaN(queue[index]) || queue[index] === \".\") {\r\n          secondNumber += queue[index];\r\n        } else {\r\n          firstNumber = this.performOperation(\r\n            firstNumber,\r\n            secondNumber,\r\n            operator\r\n          );\r\n          secondNumber = \"\";\r\n          operator = queue[index];\r\n        }\r\n      } else if (!isNaN(queue[index]) || queue[index] === \".\") {\r\n        firstNumber += queue[index];\r\n      } else {\r\n        operator = queue[index];\r\n      }\r\n    }\r\n    return this.performOperation(firstNumber, secondNumber, operator);\r\n  }\r\n\r\n  render() {\r\n    const { queue, result } = this.state;\r\n    return (\r\n      <div className=\"calculator display-flex flex-column space-between\">\r\n        <div className=\"display-calculator display-flex flex-column align-end flex-end margin-right-20 margin-left-20 margin-top-auto margin-bottom-20\">\r\n          <div className=\"history text-right\">\r\n            {result.length > 0 ? <div>{queue}</div> : null}\r\n          </div>\r\n          <div className=\"output-results text-right\">\r\n            {result.length > 0 ? <div>{result}</div> : <div>{queue}</div>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"buttons margin-bottom-40\">\r\n          <div className=\"line-buttons margin-left-20 margin-right-20 margin-bottom-10 margin-top-10 display-flex space-around\">\r\n            <Button\r\n              value=\"%\"\r\n              type={ButtonType.operator}\r\n              onClickItem={this.handleOnClick}\r\n            />\r\n            <Button\r\n              value=\"/\"\r\n              type={ButtonType.operator}\r\n              onClickItem={this.handleOnClick}\r\n            />\r\n            <Button\r\n              value=\"C\"\r\n              type={ButtonType.operator}\r\n              onClickItem={this.handleOnClick}\r\n            />\r\n            <Button\r\n              value={<i className=\"material-icons\">keyboard_backspace</i>}\r\n              type={ButtonType.operator}\r\n              onClickItem={this.handleOnClick}\r\n            />\r\n          </div>\r\n          <div className=\"line-buttons margin-left-20 margin-right-20 margin-bottom-10 margin-top-10 display-flex space-around\">\r\n            <Button value=\"1\" onClickItem={this.handleOnClick} />\r\n            <Button value=\"2\" onClickItem={this.handleOnClick} />\r\n            <Button value=\"3\" onClickItem={this.handleOnClick} />\r\n            <Button\r\n              value={\"x\"}\r\n              type={ButtonType.operator}\r\n              onClickItem={this.handleOnClick}\r\n            />\r\n          </div>\r\n          <div className=\"line-buttons margin-left-20 margin-right-20 margin-bottom-10 margin-top-10 display-flex space-around\">\r\n            <Button value=\"4\" onClickItem={this.handleOnClick} />\r\n            <Button value=\"5\" onClickItem={this.handleOnClick} />\r\n            <Button value=\"6\" onClickItem={this.handleOnClick} />\r\n            <Button\r\n              value={\"-\"}\r\n              type={ButtonType.operator}\r\n              onClickItem={this.handleOnClick}\r\n            />\r\n          </div>\r\n          <div className=\"line-buttons margin-left-20 margin-right-20 margin-bottom-10 margin-top-10 display-flex space-around\">\r\n            <Button value=\"7\" onClickItem={this.handleOnClick} />\r\n            <Button value=\"8\" onClickItem={this.handleOnClick} />\r\n            <Button value=\"9\" onClickItem={this.handleOnClick} />\r\n            <Button\r\n              value=\"+\"\r\n              type={ButtonType.operator}\r\n              onClickItem={this.handleOnClick}\r\n            />\r\n          </div>\r\n          <div className=\"line-buttons margin-left-20 margin-right-20 margin-bottom-10 margin-top-10 display-flex space-around\">\r\n            <Button value=\"00\" onClickItem={this.handleOnClick} />\r\n            <Button value=\"0\" onClickItem={this.handleOnClick} />\r\n            <Button value=\".\" onClickItem={this.handleOnClick} />\r\n            <Button\r\n              value={\"=\"}\r\n              type={ButtonType.equal}\r\n              onClickItem={this.handleOnClick}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React, { Component } from \"react\";\nimport \"../styles/App.scss\";\nimport Calculator from \"./Calculator\";\nimport \"../styles/flexbox.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App display-flex\">\n        <section className=\"margin-left-auto margin-right-50 margin-top-auto margin-bottom-auto\">\n          <Calculator />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}